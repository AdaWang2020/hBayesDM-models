{
  "title": "Model Information Schema",
  "description": "Written by Jethro Lee",
  "type": "object",
  "properties": {
    "task_name": {
      "required": true,
      "$ref": "#/definitions/_name"
    },
    "model_name": {
      "required": true,
      "$ref": "#/definitions/_name"
    },
    "model_type": {
      "required": true,
      "type": "object",
      "enum": [
        {"code": "", "desc": "Hierarchical"},
        {"code": "single", "desc": "Individual"},
        {"code": "multipleB", "desc": "Multiple-Block Hierarchical"}
      ]
    },
    "notes": {
      "required": true,
      "type": "array",
      "items": {"$ref": "#/definitions/non_empty_string"}
    },
    "contributors": {
      "required": true,
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "required": true,
            "$ref": "#/definitions/non_empty_string"
          },
          "email": {
            "required": true,
            "type": "string",
            "format": "email"
          },
          "link": {
            "required": true,
            "type": "string",
            "format": "uri"
          }
        },
        "additionalProperties": false
      }
    },
    "data_columns": {
      "required": true,
      "type": "object",
      "properties": {
        "subjID": {
          "required": true,
          "const": "A unique identifier for each subject in the data-set."
        }
      },
      "patternProperties": {
        "^[a-zA-Z0-9_]+$": {"$ref": "#/definitions/non_empty_string"}
      },
      "additionalProperties": false
    },
    "parameters": {
      "required": true,
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9_]+$": {
          "type": "object",
          "properties": {
            "desc": {
              "required": true,
              "$ref": "#/definitions/non_empty_string"
            },
            "info": {
              "required": true,
              "type": "array",
              "minItems": 3,
              "maxItems": 3,
              "items": {
                "type": ["number", "string", "null"],
                "description": "**Edit below to add more allowed patterns**",
                "pattern": "^(-?Inf|exp\\([0-9.]+\\))$"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "regressors": {
      "required": true,
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9_]+$": {
          "type": "integer",
          "description": "**Edit below to add more allowed values**",
          "enum": [2, 3]
        }
      },
      "additionalProperties": false
    },
    "postpreds": {
      "required": true,
      "type": "array",
      "items": {
        "type": "string",
        "description": "**Edit below to add more allowed values**",
        "enum": ["y_pred", "y_pred_step1", "y_pred_step2"]
      }
    },
    "additional_args": {
      "required": true,
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "required": true,
            "$ref": "#/definitions/code_string"
          },
          "default": {
            "required": true,
            "type": "number"
          },
          "desc": {
            "required": true,
            "$ref": "#/definitions/non_empty_string"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "additionalProperties": false,
  "if": {
    "properties": {"model_type": {"properties": {"code": {"const": "multipleB"}}}}
  },
  "then": {
    "properties": {"data_columns": {"required": ["block"]}}
  },
  "definitions": {
    "_name": {
      "type": "object",
      "properties": {
        "code": {
          "required": true,
          "$ref": "#/definitions/code_string"
        },
        "desc": {
          "required": true,
          "$ref": "#/definitions/non_empty_string"
        },
        "cite": {
          "required": true,
          "type": "array",
          "items": {"$ref": "#/definitions/non_empty_string"}
        }
      },
      "additionalProperties": false
    },
    "code_string": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9_]+$"
    },
    "non_empty_string": {
      "type": "string",
      "not": {"const": ""}
    }
  }
}
